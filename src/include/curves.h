/*
 *  the curves recommended in NIST
 */

#ifndef CURVES_H 
#define CURVES_H

#include <stdint.h>
#include <stdio.h>

#define ERROR(info) fprintf(stdout, "[%s:%d]%s\n    %s\n", __FILE__, \
                __LINE__, __func__, info) 


/* Curve selection options. */
#define secp128r1 16
#define secp192r1 24
#define secp256r1 32
#define secp384r1 48

#define ECC_CURVE secp128r1

#ifndef ECC_CURVE
    #define ECC_CURVE secp256r1
#endif

#if (ECC_CURVE != secp128r1 && ECC_CURVE != secp192r1 && ECC_CURVE != secp256r1 && ECC_CURVE != secp384r1)
    #error "Must define ECC_CURVE to one of the available curves"
#endif

#define ECC_BYTES ECC_CURVE

#ifdef __cplusplus
extern "C"
{
#endif

#define NUM_ECC_DIGITS (ECC_BYTES/8)

typedef struct EccPoint
{
    uint8_t x[ECC_BYTES];
    uint8_t y[ECC_BYTES];
} EccPoint;

#define CONCAT1(a, b) a##b
#define CONCAT(a, b) CONCAT1(a, b)

#define Curve_P_16 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF }
#define Curve_P_24 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF} 
#define Curve_P_32 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,\
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
                    0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF}
#define Curve_P_48 {0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,\
                    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}

#define Curve_A_16 {0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF}
#define Curve_A_24 {0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF} 
#define Curve_A_32 {0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,\
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
                    0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF}
#define Curve_A_48 {0xFC, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,\
                    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}

#define Curve_B_16 {0xD3, 0x5E, 0xEE, 0x2C, 0x3C, 0x99, 0x24, 0xD8,\
                    0x3D, 0xF4, 0x79, 0x10, 0xC1, 0x79, 0x75, 0xE8 }
// #define Curve_B_16 {0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
//                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
#define Curve_B_24 {0xB1, 0xB9, 0x46, 0xC1, 0xEC, 0xDE, 0xB8, 0xFE,\
                    0x49, 0x30, 0x24, 0x72, 0xAB, 0xE9, 0xA7, 0x0F,\
                    0xE7, 0x80, 0x9C, 0xE5, 0x19, 0x05, 0x21, 0x64 }
// #define Curve_B_32 {0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
//                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
//                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
//                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
#define Curve_B_32 {0x4b, 0x60, 0xd2, 0x27, 0x3e, 0x3c, 0xce, 0x3b,\
                    0xf6, 0xb0, 0x53, 0xcc, 0xb0, 0x06, 0x1d, 0x65,\
                    0xbc, 0x86, 0x98, 0x76, 0x55, 0xbd, 0xeb, 0xb3,\
                    0xe7, 0x93, 0x3a, 0xaa, 0xd8, 0x35, 0xc6, 0x5a }
#define Curve_B_48 {0xEF, 0x2A, 0xEC, 0xD3, 0xED, 0xC8, 0x85, 0x2A,\
                    0x9D, 0xD1, 0x2E, 0x8A, 0x8D, 0x39, 0x56, 0xC6,\
                    0x5A, 0x87, 0x13, 0x50, 0x8F, 0x08, 0x14, 0x03,\
                    0x12, 0x41, 0x81, 0xFE, 0x6E, 0x9C, 0x1D, 0x18,\
                    0x19, 0x2D, 0xF8, 0xE3, 0x6B, 0x05, 0x8E, 0x98,\
                    0xE4, 0xE7, 0x3E, 0xE2, 0xA7, 0x2F, 0x31, 0xB3, }

#define Curve_G_16 {\
    {   0x86, 0x5B, 0x2C, 0xA5, 0x7C, 0x60, 0x28, 0x0C,\
        0x2D, 0x9B, 0x89, 0x8B, 0x52, 0xF7, 0x1F, 0x16 },\
    {   0x83, 0x7A, 0xED, 0xDD, 0x92, 0xA2, 0x2D, 0xC0,\
        0x13, 0xEB, 0xAF, 0x5B, 0x39, 0xC8, 0x5A, 0xCF } }
#define Curve_2G_16 {\
    {   0x7e, 0xa9, 0x53, 0x47, 0x4b, 0xb8, 0x9d, 0x19 ,\
        0xdb, 0x71, 0x21, 0xb9, 0xc6, 0xa0, 0x51, 0x81},\
    {   0x95, 0x7e, 0x5b, 0x27, 0xa9, 0x95, 0x83, 0x83 ,\
        0xae, 0xca, 0x55, 0x94, 0x55, 0x53, 0xd8, 0x03}}

#define Curve_G_24 {\
    {   0x12, 0x10, 0xFF, 0x82, 0xFD, 0x0A, 0xFF, 0xF4,\
        0x00, 0x88, 0xA1, 0x43, 0xEB, 0x20, 0xBF, 0x7C,\
        0xF6, 0x90, 0x30, 0xB0, 0x0E, 0xA8, 0x8D, 0x18 },\
    {   0x11, 0x48, 0x79, 0x1E, 0xA1, 0x77, 0xF9, 0x73,\
        0xD5, 0xCD, 0x24, 0x6B, 0xED, 0x11, 0x10, 0x63,\
        0x78, 0xDA, 0xC8, 0xFF, 0x95, 0x2B, 0x19, 0x07}}
#define Curve_2G_24 {\
    {   0x88, 0xa8, 0x82, 0x69, 0xb1, 0x0f, 0xa7, 0x29 ,\
        0xf6, 0xa3, 0x88, 0x15, 0x63, 0x34, 0x55, 0xd3 ,\
        0x2a, 0x3f, 0x78, 0x28, 0x58, 0xbf, 0xfe, 0xda },\
    {   0xab, 0x93, 0x7e, 0x5c, 0xfa, 0x1a, 0x33, 0x59 ,\
        0x8f, 0x86, 0x1b, 0x14, 0xbc, 0x7b, 0xb2, 0x46 ,\
        0xfa, 0xa0, 0x3d, 0x99, 0x0d, 0xda, 0x6b, 0xdd}}

#define Curve_G_32 {\
    {   0x96, 0xc2, 0x98, 0xd8, 0x45, 0x39, 0xa1, 0xf4,\
        0xa0, 0x33, 0xeb, 0x2d, 0x81, 0x7d, 0x03, 0x77,\
        0xf2, 0x40, 0xa4, 0x63, 0xe5, 0xe6, 0xbc, 0xf8,\
        0x47, 0x42, 0x2c, 0xe1, 0xf2, 0xd1, 0x17, 0x6b},\
    {   0xf5, 0x51, 0xbf, 0x37, 0x68, 0x40, 0xb6, 0xcb,\
        0xce, 0x5e, 0x31, 0x6b, 0x57, 0x33, 0xce, 0x2b,\
        0x16, 0x9e, 0x0f, 0x7c, 0x4a, 0xeb, 0xe7, 0x8e,\
        0x9b, 0x7f, 0x1a, 0xfe, 0xe2, 0x42, 0xe3, 0x4f}}

#define Curve_2G_32 {\
    {   0x78, 0x99, 0x66, 0x47, 0xFC, 0x48, 0x0B, 0xA6,  \
        0x35, 0x1B, 0xF2, 0x77, 0xE2, 0x69, 0x89, 0xC0,  \
        0xC3, 0x1A, 0xB5, 0x04, 0x03, 0x38, 0x52, 0x8A,  \
        0x7E, 0x4F, 0x03, 0x8D, 0x18, 0x7B, 0xF2, 0x7C },\
    {   0xD1, 0x73, 0x78, 0x22, 0x9D, 0xB7, 0x04, 0x9E,  \
        0x29, 0x82, 0xE9, 0x3C, 0xE6, 0xAD, 0x7D, 0xBA,  \
        0xDB, 0x30, 0x74, 0x9F, 0xC6, 0x9A, 0x3D, 0x29,  \
        0x40, 0xD0, 0x8E, 0xDB, 0x10, 0x55, 0x77, 0x07 }}

#define Curve_G_48 {\
    {   0xB7, 0x0A, 0x76, 0x72, 0x38, 0x5E, 0x54, 0x3A,\
        0x6C, 0x29, 0x55, 0xBF, 0x5D, 0xF2, 0x02, 0x55,\
        0x38, 0x2A, 0x54, 0x82, 0xE0, 0x41, 0xF7, 0x59,\
        0x98, 0x9B, 0xA7, 0x8B, 0x62, 0x3B, 0x1D, 0x6E,\
        0x74, 0xAD, 0x20, 0xF3, 0x1E, 0xC7, 0xB1, 0x8E,\
        0x37, 0x05, 0x8B, 0xBE, 0x22, 0xCA, 0x87, 0xAA},\
    {   0x5F, 0x0E, 0xEA, 0x90, 0x7C, 0x1D, 0x43, 0x7A,\
        0x9D, 0x81, 0x7E, 0x1D, 0xCE, 0xB1, 0x60, 0x0A,\
        0xC0, 0xB8, 0xF0, 0xB5, 0x13, 0x31, 0xDA, 0xE9,\
        0x7C, 0x14, 0x9A, 0x28, 0xBD, 0x1D, 0xF4, 0xF8,\
        0x29, 0xDC, 0x92, 0x92, 0xBF, 0x98, 0x9E, 0x5D,\
        0x6F, 0x2C, 0x26, 0x96, 0x4A, 0xDE, 0x17, 0x36}}

#define Curve_N_16 {0x15, 0xA1, 0x38, 0x90, 0x1B, 0x0D, 0xA3, 0x75,\
                    0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF}
#define Curve_N_24 {0x31, 0x28, 0xD2, 0xB4, 0xB1, 0xC9, 0x6B, 0x14,\
                    0x36, 0xF8, 0xDE, 0x99, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}
#define Curve_N_32 {0x51, 0x25, 0x63, 0xFC, 0xC2, 0xCA, 0xB9, 0xF3,\
                    0x84, 0x9E, 0x17, 0xA7, 0xAD, 0xFA, 0xE6, 0xBC,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF}
#define Curve_N_48 {0x73, 0x29, 0xC5, 0xCC, 0x6A, 0x19, 0xEC, 0xEC,\
                    0x7A, 0xA7, 0xB0, 0x48, 0xB2, 0x0D, 0x1A, 0x58,\
                    0xDF, 0x2D, 0x37, 0xF4, 0x81, 0x4D, 0x63, 0xC7,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}

static uint8_t curve_p[ECC_BYTES] = CONCAT(Curve_P_, ECC_CURVE);
static uint8_t curve_b[ECC_BYTES] = CONCAT(Curve_B_, ECC_CURVE);
static EccPoint curve_G = CONCAT(Curve_G_, ECC_CURVE);
static EccPoint curve_2G = CONCAT(Curve_2G_, ECC_CURVE);
static uint8_t curve_n[ECC_BYTES] = CONCAT(Curve_N_, ECC_CURVE);
static uint8_t curve_a[ECC_BYTES] = CONCAT(Curve_A_, ECC_CURVE);

#ifdef __cplusplus
} /* end of extern "C" */
#endif

#endif
